// Code generated by protoc-gen-go. DO NOT EDIT.
// source: file_server.proto

package proto_file

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UploadFileRequsest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FileContent          []byte   `protobuf:"bytes,2,opt,name=FileContent,proto3" json:"FileContent,omitempty"`
	FileType             string   `protobuf:"bytes,3,opt,name=FileType,proto3" json:"FileType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadFileRequsest) Reset()         { *m = UploadFileRequsest{} }
func (m *UploadFileRequsest) String() string { return proto.CompactTextString(m) }
func (*UploadFileRequsest) ProtoMessage()    {}
func (*UploadFileRequsest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a16f8fdec850da66, []int{0}
}

func (m *UploadFileRequsest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileRequsest.Unmarshal(m, b)
}
func (m *UploadFileRequsest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileRequsest.Marshal(b, m, deterministic)
}
func (m *UploadFileRequsest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileRequsest.Merge(m, src)
}
func (m *UploadFileRequsest) XXX_Size() int {
	return xxx_messageInfo_UploadFileRequsest.Size(m)
}
func (m *UploadFileRequsest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileRequsest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileRequsest proto.InternalMessageInfo

func (m *UploadFileRequsest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UploadFileRequsest) GetFileContent() []byte {
	if m != nil {
		return m.FileContent
	}
	return nil
}

func (m *UploadFileRequsest) GetFileType() string {
	if m != nil {
		return m.FileType
	}
	return ""
}

type UploadFileResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadFileResponse) Reset()         { *m = UploadFileResponse{} }
func (m *UploadFileResponse) String() string { return proto.CompactTextString(m) }
func (*UploadFileResponse) ProtoMessage()    {}
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a16f8fdec850da66, []int{1}
}

func (m *UploadFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileResponse.Unmarshal(m, b)
}
func (m *UploadFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileResponse.Marshal(b, m, deterministic)
}
func (m *UploadFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileResponse.Merge(m, src)
}
func (m *UploadFileResponse) XXX_Size() int {
	return xxx_messageInfo_UploadFileResponse.Size(m)
}
func (m *UploadFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileResponse proto.InternalMessageInfo

func (m *UploadFileResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type DownloadFileRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FileType             string   `protobuf:"bytes,2,opt,name=FileType,proto3" json:"FileType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadFileRequest) Reset()         { *m = DownloadFileRequest{} }
func (m *DownloadFileRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadFileRequest) ProtoMessage()    {}
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a16f8fdec850da66, []int{2}
}

func (m *DownloadFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadFileRequest.Unmarshal(m, b)
}
func (m *DownloadFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadFileRequest.Marshal(b, m, deterministic)
}
func (m *DownloadFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadFileRequest.Merge(m, src)
}
func (m *DownloadFileRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadFileRequest.Size(m)
}
func (m *DownloadFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadFileRequest proto.InternalMessageInfo

func (m *DownloadFileRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DownloadFileRequest) GetFileType() string {
	if m != nil {
		return m.FileType
	}
	return ""
}

type DownloadFileResponse struct {
	FileContent          []byte   `protobuf:"bytes,2,opt,name=FileContent,proto3" json:"FileContent,omitempty"`
	Status               string   `protobuf:"bytes,255,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadFileResponse) Reset()         { *m = DownloadFileResponse{} }
func (m *DownloadFileResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadFileResponse) ProtoMessage()    {}
func (*DownloadFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a16f8fdec850da66, []int{3}
}

func (m *DownloadFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadFileResponse.Unmarshal(m, b)
}
func (m *DownloadFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadFileResponse.Marshal(b, m, deterministic)
}
func (m *DownloadFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadFileResponse.Merge(m, src)
}
func (m *DownloadFileResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadFileResponse.Size(m)
}
func (m *DownloadFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadFileResponse proto.InternalMessageInfo

func (m *DownloadFileResponse) GetFileContent() []byte {
	if m != nil {
		return m.FileContent
	}
	return nil
}

func (m *DownloadFileResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*UploadFileRequsest)(nil), "proto_file.UploadFileRequsest")
	proto.RegisterType((*UploadFileResponse)(nil), "proto_file.UploadFileResponse")
	proto.RegisterType((*DownloadFileRequest)(nil), "proto_file.DownloadFileRequest")
	proto.RegisterType((*DownloadFileResponse)(nil), "proto_file.DownloadFileResponse")
}

func init() {
	proto.RegisterFile("file_server.proto", fileDescriptor_a16f8fdec850da66)
}

var fileDescriptor_a16f8fdec850da66 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0xcb, 0xcc, 0x49,
	0x8d, 0x2f, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x02,
	0x53, 0xf1, 0x20, 0x09, 0xa5, 0x24, 0x2e, 0xa1, 0xd0, 0x82, 0x9c, 0xfc, 0xc4, 0x14, 0xb7, 0xcc,
	0x9c, 0xd4, 0xa0, 0xd4, 0xc2, 0xd2, 0xe2, 0xd4, 0xe2, 0x12, 0x21, 0x3e, 0x2e, 0x26, 0xcf, 0x14,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x26, 0xcf, 0x14, 0x21, 0x05, 0x2e, 0x6e, 0x90, 0xbc,
	0x73, 0x7e, 0x5e, 0x49, 0x6a, 0x5e, 0x89, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x4f, 0x10, 0xb2, 0x90,
	0x90, 0x14, 0x17, 0x07, 0x88, 0x1b, 0x52, 0x59, 0x90, 0x2a, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x19,
	0x04, 0xe7, 0x2b, 0xe9, 0xa0, 0xda, 0x51, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc6, 0xc5,
	0x56, 0x5c, 0x92, 0x58, 0x52, 0x5a, 0x0c, 0xb6, 0x87, 0x33, 0x08, 0xca, 0x53, 0x72, 0xe4, 0x12,
	0x76, 0xc9, 0x2f, 0xcf, 0x43, 0x76, 0x13, 0x36, 0x27, 0x21, 0x5b, 0xc8, 0x84, 0x66, 0x61, 0x20,
	0x97, 0x08, 0xaa, 0x11, 0x50, 0x2b, 0x09, 0x7b, 0x43, 0x1c, 0xee, 0xa8, 0xff, 0x28, 0xae, 0x32,
	0x5a, 0xcb, 0xc8, 0xc5, 0x05, 0x52, 0x18, 0x0c, 0x0e, 0x48, 0x21, 0x1f, 0x2e, 0x2e, 0x84, 0x97,
	0x84, 0xe4, 0xf4, 0x10, 0x21, 0xaa, 0x87, 0x19, 0x9c, 0x52, 0x38, 0xe5, 0xa1, 0xee, 0x0a, 0xe4,
	0xe2, 0x41, 0x76, 0xaf, 0x90, 0x3c, 0xb2, 0x7a, 0x2c, 0x81, 0x21, 0xa5, 0x80, 0x5b, 0x01, 0xc4,
	0xc8, 0x24, 0x36, 0xb0, 0x02, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x72, 0xa5, 0x63, 0xee,
	0xff, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FileServerClient is the client API for FileServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileServerClient interface {
	UploadFile(ctx context.Context, in *UploadFileRequsest, opts ...grpc.CallOption) (*UploadFileResponse, error)
	DownloadFile(ctx context.Context, in *DownloadFileRequest, opts ...grpc.CallOption) (*DownloadFileResponse, error)
}

type fileServerClient struct {
	cc grpc.ClientConnInterface
}

func NewFileServerClient(cc grpc.ClientConnInterface) FileServerClient {
	return &fileServerClient{cc}
}

func (c *fileServerClient) UploadFile(ctx context.Context, in *UploadFileRequsest, opts ...grpc.CallOption) (*UploadFileResponse, error) {
	out := new(UploadFileResponse)
	err := c.cc.Invoke(ctx, "/proto_file.FileServer/UploadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServerClient) DownloadFile(ctx context.Context, in *DownloadFileRequest, opts ...grpc.CallOption) (*DownloadFileResponse, error) {
	out := new(DownloadFileResponse)
	err := c.cc.Invoke(ctx, "/proto_file.FileServer/DownloadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileServerServer is the server API for FileServer service.
type FileServerServer interface {
	UploadFile(context.Context, *UploadFileRequsest) (*UploadFileResponse, error)
	DownloadFile(context.Context, *DownloadFileRequest) (*DownloadFileResponse, error)
}

// UnimplementedFileServerServer can be embedded to have forward compatible implementations.
type UnimplementedFileServerServer struct {
}

func (*UnimplementedFileServerServer) UploadFile(ctx context.Context, req *UploadFileRequsest) (*UploadFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadFile not implemented")
}
func (*UnimplementedFileServerServer) DownloadFile(ctx context.Context, req *DownloadFileRequest) (*DownloadFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadFile not implemented")
}

func RegisterFileServerServer(s *grpc.Server, srv FileServerServer) {
	s.RegisterService(&_FileServer_serviceDesc, srv)
}

func _FileServer_UploadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadFileRequsest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServerServer).UploadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_file.FileServer/UploadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServerServer).UploadFile(ctx, req.(*UploadFileRequsest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileServer_DownloadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServerServer).DownloadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_file.FileServer/DownloadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServerServer).DownloadFile(ctx, req.(*DownloadFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_file.FileServer",
	HandlerType: (*FileServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UploadFile",
			Handler:    _FileServer_UploadFile_Handler,
		},
		{
			MethodName: "DownloadFile",
			Handler:    _FileServer_DownloadFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "file_server.proto",
}
